services:
  mysql:
    container_name: "rfsim5g-mysql"
    image: mysql:8.0
    init: true
    volumes:
      - ./config/oai_db.sql:/docker-entrypoint-initdb.d/oai_db.sql
      - ./config/mysql-healthcheck.sh:/tmp/mysql-healthcheck.sh
    environment:
      - TZ=Europe/Paris
      - MYSQL_DATABASE=oai_db
      - MYSQL_USER=test
      - MYSQL_PASSWORD=test
      - MYSQL_ROOT_PASSWORD=linux
    healthcheck:
      test: /bin/bash -c "/tmp/mysql-healthcheck.sh"
      start_period: 10s
      start_interval: 500ms
      interval: 10s
      timeout: 5s
      retries: 30
    networks:
      public_net:
        ipv4_address: 192.168.71.131
  oai-amf:
    container_name: "amf"
    image: oaisoftwarealliance/oai-amf:v2.1.10
    environment:
      - TZ=Europe/paris
    volumes:
      - ./config/mini_nonrf_config.yaml:/openair-amf/etc/config.yaml
    depends_on:
      - mysql
    networks:
      public_net:
        ipv4_address: 192.168.71.132
  oai-smf:
    container_name: "rfsim5g-oai-smf"
    image: oaisoftwarealliance/oai-smf:v2.1.10
    environment:
      - TZ=Europe/Paris
    volumes:
      - ./config/mini_nonrf_config.yaml:/openair-smf/etc/config.yaml
    depends_on:
      - oai-amf
    networks:
      public_net:
        ipv4_address: 192.168.71.133
  oai-upf:
    container_name: "rfsim5g-oai-upf"
    image: oaisoftwarealliance/oai-upf:v2.1.10
    init: true
    # entrypoint: /bin/bash -c "apt update && apt install -y iputils-ping traceroute"
    environment:
      - TZ=Europe/Paris
    volumes:
      - ./config/mini_nonrf_config.yaml:/openair-upf/etc/config.yaml
    depends_on:
      - oai-smf
    cap_add:
      - NET_ADMIN
      - SYS_ADMIN
    cap_drop:
      - ALL
    privileged: true
    networks:
      public_net:
        ipv4_address: 192.168.71.134
        interface_name: eth0
      traffic_net:
        ipv4_address: 192.168.72.134
        interface_name: eth1
  oai-ext-dn:
    privileged: true
    container_name: rfsim5g-oai-ext-dn
    image: oaisoftwarealliance/trf-gen-cn5g:focal
    init: true
    entrypoint: /bin/bash -c \
      "iptables -t nat -A POSTROUTING -o eth0 -j MASQUERADE;"\
      "ip route add 12.1.1.0/24 via 192.168.72.134 dev eth0; sleep infinity"
    depends_on:
      - oai-upf
    networks:
      traffic_net:
        ipv4_address: 192.168.72.135
    healthcheck:
      test: /bin/bash -c "ping -c 2 192.168.72.134"
      start_period: 10s
      start_interval: 500ms
      interval: 10s
      timeout: 5s
      retries: 5

  oai-gnb:
    image: ${REGISTRY:-oaisoftwarealliance}/${GNB_IMG:-oai-gnb}:${TAG:-develop}
    container_name: gnb
    privileged: true
    cap_drop:
      - ALL
    cap_add:
      - SYS_NICE
      - IPC_LOCK
    ulimits:
      core: -1 # for core dumps
    environment:
      USE_B2XX: "yes"
      USE_ADDITIONAL_OPTIONS: --RUs.[0].sdr_addrs serial=31027B3 --telnetsrv --telnetsrv.shrmod ci --continuous-tx --log_config.global_log_options level,nocolor,time,line_num,function
    devices:
      - /dev/bus/usb/:/dev/bus/usb/
    volumes:
      - ./config/gnb.sa.band78.fr1.24PRB.usrpb210.conf:/opt/oai-gnb/etc/gnb.conf
    # for performance reasons, we use host mode: in bridge mode, we have
    # unacceptable DL TCP performance. However, the whole point of
    # containerization is to not be in host mode, so update this to macvlan
    # later.
    networks:
      public_net:
        ipv4_address: 192.168.71.140
    #entrypoint: /bin/bash -c "sleep infinity"
    healthcheck:
      # pgrep does NOT work
      test: /bin/bash -c "ps aux | grep -v grep | grep -c softmodem"
      interval: 10s
      timeout: 5s
      retries: 5

  oai-nr-ue:
    image: ${REGISTRY:-oaisoftwarealliance}/${NRUE_IMG:-oai-nr-ue}:${TAG:-develop}
    container_name: ue
    privileged: true
    cap_drop:
      - ALL
    cap_add:
      - NET_ADMIN # for interface bringup
      - NET_RAW # for ping
      - SYS_NICE
      - IPC_LOCK
    ulimits:
      core: -1 # for core dumps
    # entrypoint: /bin/bash -c "apt update && apt install -y iputils-ping traceroute"
    environment:
      USE_B2XX: "yes"
      # Center frequency set to match gNB 24 PRB configuration
      USE_ADDITIONAL_OPTIONS: -r 106 --numerology 1 --band 78 -C 3604320000 --ssb 40 --ue-scan-carrier --ue-fo-compensation -E --uicc0.imsi 208990100001100 --usrp-args serial=31027B2
    depends_on:
      - oai-gnb
    devices:
      - /dev/net/tun:/dev/net/tun
      - /dev/bus/usb/:/dev/bus/usb/
    volumes:
      - ../config/nrue.uicc.yaml:/opt/oai-nr-ue/etc/nr-ue.yaml
    # Using host network mode for USRP performance
    networks:
      public_net:
        ipv4_address: 192.168.71.151
    healthcheck:
      test: /bin/bash -c "pgrep nr-uesoftmodem"
      start_period: 10s
      start_interval: 500ms
      interval: 10s
      timeout: 5s
      retries: 5

networks:
  public_net:
    driver: bridge
    name: rfsim5g-oai-public-net
    ipam:
      config:
        - subnet: 192.168.71.128/26
    driver_opts:
      com.docker.network.bridge.name: "rfsim5g-public"
  traffic_net:
    driver: bridge
    name: rfsim5g-oai-traffic-net
    ipam:
      config:
        - subnet: 192.168.72.128/26
    driver_opts:
      com.docker.network.bridge.name: "rfsim5g-traffic"
